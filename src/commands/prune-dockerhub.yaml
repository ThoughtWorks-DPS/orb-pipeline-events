# src/commands/prunt-registry.yaml
# yamllint disable rule:line-length
---
description: |
  Delete artifacts from dockerhub registry.

  Often a CI pipeline will need to write frequent development builds of a docker image to a
  registry as part of the development process for applications intended for deployment within
  a kubernetes namespace.

  A useful step upon tagging a release candidate is to remove the dev builds from the registry.

  This command accepts a regex pattern for identifying the tags to be removed from the registry
  and will

parameters:

  repository:
    description: dockerhub repository to prune
    type: string

  tag-filter:
    description: search parameters to find desired iamge tags
    type: string

  registry-login:
    type: string
    default: DOCKER_LOGIN

  registry-password:
    type: string
    default: DOCKER_PASSWORD

steps:
  - run:
      name: get bearer token from dtr using login and password
      command: |
        curl -s -H "Content-Type: application/json" -X POST \
             -d "{\"username\": \"${<< parameters.registry-login >>}\", \"password\": \"${<< parameters.registry-password >>}\"}" \
             https://hub.docker.com/v2/users/login/ | jq -r .token > token.jwt
  - run:
      name: get all tags from specified image repository
      command: |
        export TOKEN=$(cat token.jwt)
        PAGE="https://hub.docker.com/v2/repositories/<< parameters.repository >>/tags/"
        while [[ "$PAGE" != null ]]; do
            curl ${PAGE} \
                -X GET \
                -H "Authorization: JWT ${TOKEN}" \
                > page_images.json
            cat page_images.json >> all_images.json
            PAGE=$(cat page_images.json | jq -r '.next')
        done
  - run:
      name: search image list for desired tags
      command: |
        cat all_images.json | jq -r '.results | .[] | select(.name | contains ("<< parameters.tag-filter >>")) | .name' > dev_tags
  - run:
      name: delete results of image search
      command: |
        export TOKEN=$(cat token.jwt)
        while read TAG; do
            curl "https://hub.docker.com/v2/repositories/<< parameters.repository >>/tags/${TAG}/" \
                  -X DELETE \
                  -H "Authorization: JWT ${TOKEN}"
        done < dev_tags
